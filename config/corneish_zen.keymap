/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUMBER 1
#define SYMBOL 2
#define MOVEMENT 3
#define MOUSE 4
#define STOCK 5

#define TAPPING_TERM 200
#define QUICK_TAP 125

/* Key index
 0  1  2  3  4         5  6  7  8  9
10 11 12 13 14        15 16 17 18 19
20 21 22 23 24        25 26 27 28 29
        30 31 32    33 34 35         */

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};

/ {
    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
  chosen {
    //zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
    zmk,physical-layout = &foostan_corne_5col_layout;
  };
};

/ {

    combos {
        compatible = "zmk,combos";

        combo_slash {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LS(N7)>;
            layers = <DEFAULT STOCK>;
        };

    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "DEFAULT";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F   |    P    |    B    |   |    J    |    L     |   U   |  Y  |  '  |
// |  A  |R/Alt|S/Ctrl| T/Shift |    G    |   |    M    |    N     |   E   |  I  |  O  |
// |  Z  |  X  |  C   |    D    |    V    |   |    K    |    H     |   ,   |  .  |  ?  |
//             | GUI  |ESC/Mouse| SPC/Move|   | ENT/Num | Bspc/Sym | Normal|
                        bindings = <
   &kp Q &kp W      &kp F       &kp P        &kp B         &kp J     &kp L         &kp U       &kp Y        &kp NUHS
   &gqt LGUI A &gqt LALT R &gqt LCTRL S &gqt LSHIFT T &kp G         &kp M     &gqt LSHIFT N  &gqt LCTRL E &gqt LALT I   &gqt LGUI O
   &kp Z &kp X      &kp C       &kp D        &kp V         &kp K     &kp H         &kp COMMA   &kp DOT      &kp LS(MINUS)
                    &kp LGUI    &lt 3 ESC    &lt 4 SPACE   &lt 1 RET &lt 2 BSPC    &to STOCK
                        >;
                };
                number_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  [  |  7  |  8  |  9  |  ]  |   |     |     |     |     |     |
// | Tab |  4  |  5  |  6  |  =  |   |     |Shift| Ctrl| Alt |     |
// |  <  |  1  |  2  |  3  |  >  |   |     |     |     |     |     |
//             |  .  |  0  |  -  |   | ENT |     |    |
                        bindings = <
   &kp RA(N8) &kp N7  &kp N8  &kp N9 &kp RA(N9)      &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
   &kp TAB    &kp N4  &kp N5  &kp N6 &kp LS(N0)      &trans   &kp LSHIFT &kp LCTRL &kp LALT &trans
   &kp NUBS   &kp N1  &kp N2  &kp N3 &kp LS(NUBS)    &trans   &trans    &trans   &trans  &trans
                      &kp DOT &kp N0 &kp SLASH       &trans   &trans    &trans
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------  
// |  {  |  &  |  *  |  (  |  }  |   |     | F1  | F2  | F3  | F4  |
// |  \  |  $  |  %  |  ^  |  +  |   |     | F5  | F6  | F7  | F8  |
// |  ~  |  !  |  @  |  #  |  |  |   |     | F9  | F10 | F11 | F12 |
//             |  (  |  )  |  "  |   | ENT |     | ALT |
                        bindings = <
   &kp RA(N7)    &kp LS(N6) &kp TILDE  &kp RA(E)    &kp RA(N0)   &trans &kp F9 &kp F10 &kp F11 &kp F12
   &kp EQUAL     &kp RA(N4) &kp LS(N5) &kp LS(RBRC) &kp MINUS    &trans &kp F5 &kp F6  &kp F7  &kp F8
   &kp RA(RBRC)  &kp LS(N1) &kp RA(N2) &kp LS(N3)   &kp GRAVE    &trans &kp F1 &kp F2  &kp F3  &kp F4
                            &kp LS(N8) &kp LS(N9)   &kp LS(N2)   &trans &trans &trans
                        >;
                };
                mouse_layer {
                        label = "MOUSE";
// ----------------------------------------------------------------------------------------- 
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp SQT
   &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp SEMI &kp SQT
   &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp SLASH
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                movement_layer {
                        label = "MOVEMENT";
// ----------------------------------------------------------------------------------------- 
// |     |     |     |     |     |   | Mouse1| Mouse_left|Mouse_down|Mouse_up|Mouse_right|
// |     |     |     |     |     |   | Mouse2 | Left | Down |  Up  | Right|
// |     |     |     |     |     |   | Caps | End | PgDn | PgUp | Home  |
//             |     |     |     |   | TAB  |backspace| ALT |
                        bindings = <
   &trans &trans   &trans    &trans     &trans      &mkp MB1  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT
   &trans &kp LALT &kp LCTRL &kp LSHIFT &trans      &mkp MB2 &kp LEFT &kp DOWN  &kp UP &kp RIGHT
   &trans &trans   &trans    &trans     &trans      &caps_word  &kp END &kp PG_DN &kp PG_UP &kp HOME
                   &trans    &trans     &trans      &kp TAB    &kp BSPC &kp RALT
                        >;
                };
                stock_layer {
                        label = "STOCK";
// ----------------------------------------------------------------------------------------- 
// |  Q  |  W  |  F  |    P    |    B    |   |    J    |    L     |   U   |  Y  |  '  |
// |  A  |  R  |  S  |    T    |    G    |   |    M    |    N     |   E   |  I  |  O  |
// |  Z  |  X  |  C  |    D    |    V    |   |    K    |    H     |   ,   |  .  |  -  |
//             | GUI |ESC/Mouse| SPC/Move|   | ENT/Num | Bspc/Sym | Normal|
                        bindings = <
   &kp Q &kp W  &kp F         &kp P       &kp B         &kp J     &kp L       &kp U       &kp Y    &kp NUHS
   &kp A &kp R  &kp S         &kp T       &kp G         &kp M     &kp N       &kp E       &kp I    &kp O
   &kp Z &kp X  &kp C         &kp D       &kp V         &kp K     &kp H       &kp COMMA   &kp DOT  &kp LS(MINUS)
                &mt LCTRL ESC &kp LSHIFT  &kp SPACE     &lt 1 RET &lt 2 BSPC  &to DEFAULT
                        >;
                };
        };

};
